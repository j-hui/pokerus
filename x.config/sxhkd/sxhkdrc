# Keycode names: https://github.com/baskerville/sxhkd/blob/master/src/parse.c

## help:
super + slash
    grep -E '^##' -A1 ~/.config/sxhkd/sxhkdrc | \
    tr '\n' ' ' | \
    sed 's/--/\n/g' | \
    rofi -dmenu

## reload sxhkd:
super + z
    pkill -USR1 -x sxhkd && notify-send 'sxhkd' 'Reloaded config'

## restart bspwm:
super + shift + z
    pkill -USR1 -x sxhkd ; \
    bspc wm --restart ; \
    polybar-msg cmd restart ; \
    notify-send 'bspwm' 'Restarted bpwm'

## clear notifications:
super + q
    dunstctl close-all

## lock:
super + shift + q
    xset s activate

## app launcher:
super + {_, shift +} semicolon
    rofi -show {drun,run}

## password manager:
super + i
    ~/.local/tms/passman

## file manager:
super + shift + i
    thunar

## terminal:
super + Return
    alacritty

## qutebrowser:
super + o
    xdo activate -N qutebrowser || qutebrowser

## google chrome:
super + g
    google-chrome-stable

## incognito chrome:
super + shift + o
    google-chrome-stable --incognito

## define selected text:
super + d
    ~/.local/tms/word-lookup

## clipboard:
super + v
    rofi -modi "clipboard:greenclip print" -show clipboard -run-command '{cmd}'

## take screenshot:
{_,shift +} Print
    ~/.local/tms/screenshot {,--fullscreen}

## take screenshot:
super + {_,shift +} x
    ~/.local/tms/screenshot {,--fullscreen}

## take and save screenshot:
super + {_,shift +} c
    ~/.local/tms/screenshot --no-delete {,--fullscreen}

## volume +/-:
super + {equal,minus}
    amixer sset Master 10%{+,-}

## XF86 volume control:
{XF86AudioRaiseVolume,XF86AudioLowerVolume,XF86AudioMute}
    amixer sset Master {10%+,10%-,0%}

## XF86 brightness control:
{XF86MonBrightnessUp,XF86MonBrightnessDown}
    brightnessctl set {10%+,10%-}

## playerctl play/prev/next:
super + {apostrophe,bracketleft,bracketright}
    playerctl --player=spotifyd,spotify,%any {play-pause,previous,next}

## launch spotify:
super + shift + apostrophe
    spotify

#
# bspwm hotkeys/window management
#

## window switcher:
super + s
    rofi -show window

## bspc close/kill window:
super + {_, shift +} w
    bspc node -{c,k}

## bspc focus/swap toward direction:
super + {_, shift +} {h, j, k, l}
    bspc node -{f,s} {west, south, north, east}

## bspc previous/next desktop:
super {+ p, + n}
    bspc desktop -f {prev,next}.local

## bspc send to previous/next desktop:
super + shift {+ p, + n}
    bspc node -d {prev,next}.local

## bspc switch/swap monitor:
super + {_, shift +} {comma, period}
    bspc monitor {-f,-s} {prev, next}

## bspc go/send to desktop:
super + {_, shift +} {1-9,0}
    bspc {desktop -f,node -d} '^{1-9,10}'

## bspc goto urgent/floating:
super + {_, shift +} u
    n="$(bspc query -N -n newest.{urgent,floating})" && bspc node $n -f

## bspc rotate desktop:
super + {_, shift +} r
    bspc node @parent -R {90,270}

# super + {Left, Down, Up, Right}
#     bspc node {@first, @second, @parent, @brother}.local.leaf -f

super + {b, f}
    bspc node {prev, next}.local.leaf -f
    # bspc node '{@brother,@parent/parent}#biggest.descendant_of.local.leaf' -f
    # bspc node 'focused.!floating.!fullscreen.window#@/' -C {backward,forward}

super + y
    ~/.local/tms/bspctl hide

super + shift + y
    ~/.local/tms/bspctl unhide --focus

super + grave
    bspc node next.same_class -f

## bspc set fullscreen
super + {_, shift +} a
  bspc node -t {floating,fullscreen}

## bspc set tiled/pseudo-tiled
super + {_, shift +} t
    bspc node -t {tiled,pseudo_tiled}

## bspc toggle monocle/sticky:
super + {_, shift +} m
    bspc {desktop -l next,node -g sticky}

## bspc move floating window:
# super + {Left, Down, Up, Right}
    # bspc node -v {-20 0,0 20,0 -20,20 0}
    # bspc node -{f,s} {west, south, north, east}

## bspc move floating window:
# super + shift + {Left, Down, Up, Right}
    # bspc node -v {-20 0,0 20,0 -20,20 0}
