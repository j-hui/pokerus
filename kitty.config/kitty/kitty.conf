include papercolor-dark.conf

font_size 15.0

scrollback_lines 6969

# kitty_mod ctrl+shift
kitty_mod super

open_url_modifiers kitty_mod
open_url_with default


strip_trailing_spaces smart
#: Remove spaces at the end of lines when copying to clipboard. A
#: value of smart will do it when using normal selections, but not
#: rectangle selections. always will always do it.

rectangle_select_modifiers ctrl+alt
#: The modifiers to use rectangular selection (i.e. to select text in
#: a rectangular block with the mouse)

select_by_word_characters :@-./_~?&=%+#
#: Characters considered part of a word when double clicking. In
#: addition to these characters any character that is marked as an
#: alphanumeric character in the unicode database will be matched.

pointer_shape_when_grabbed hand

window_alert_on_bell no

remember_window_size  no
initial_window_width  800
initial_window_height 1024

#: Tab bar {{{

# tab_bar_edge bottom

#: Which edge to show the tab bar on, top or bottom

# tab_bar_margin_width 0.0

#: The margin to the left and right of the tab bar (in pts)

tab_switch_strategy left # switch upon close

tab_bar_style separator
tab_separator " | "
tab_title_template {index} {title}


enabled_layouts splits
# allow_remote_control no
#:
#: Allow other programs to control kitty. If you turn this on other
#: programs can control all aspects of kitty, including sending text
#: to kitty windows, opening new windows, closing windows, reading the
#: content of windows, etc.  Note that this even works over ssh
#: connections. You can chose to either allow any program running
#: within kitty to control it, with yes or only programs that connect
#: to the socket specified with the kitty --listen-on command line
#: option, if you use the value socket-only. The latter is useful if
#: you want to prevent programs running on a remote computer over ssh
#: from controlling kitty.
#:
#: You can open a new window that is allowed to control kitty via the
#: kitty remote control facility by prefixing the command line with @.
#: Any programs running in that window will be allowed to control
#: kitty. For example::
#:
#:     map ctrl+enter launch --allow-remote-control some_program

# clipboard_control write-clipboard write-primary

#: Allow programs running in kitty to read and write from the
#: clipboard. You can control exactly which actions are allowed. The
#: set of possible actions is: write-clipboard read-clipboard write-
#: primary read-primary. You can additionally specify no-append to
#: disable kitty's protocol extension for clipboard concatenation. The
#: default is to allow writing to the clipboard and primary selection
#: with concatenation enabled. Note that enabling the read
#: functionality is a security risk as it means that any program, even
#: one running on a remote server via SSH can read your clipboard.

macos_option_as_alt left
macos_quit_when_last_window_closed yes
macos_show_window_title_in menubar

clear_all_shortcuts yes

# modifiers to override mouse selection
# even when a terminal application has grabbed the mouse
terminal_select_modifiers shift

map alt+left            send_text all \x1bb
map alt+right           send_text all \x1bf

map kitty_mod+c         copy_to_clipboard
map kitty_mod+v         paste_from_clipboard

# TODO: test on Linux
# map kitty_mod+c  copy_to_clipboard
# map ctrl+c       copy_or_interrupt # only copy if there is selection
# map kitty_mod+v  paste_from_clipboard
# map kitty_mod+s  paste_from_selection
# map shift+insert paste_from_selection
# map kitty_mod+o  pass_selection_to_program

# NOTE: also investigate pass_selection_to_program

#: Scrolling

map kitty_mod+p             scroll_line_up
map kitty_mod+n             scroll_line_down
map kitty_mod+up            scroll_line_up
map kitty_mod+down          scroll_line_down
map kitty_mod+u             scroll_page_up
map kitty_mod+d             scroll_page_down
map kitty_mod+g             scroll_home
map kitty_mod+shift+g       scroll_end

map kitty_mod+backspace     show_scrollback

#: You can open a new window running an arbitrary program, e.g.:
#:
#:     map kitty_mod+y      launch mutt

map kitty_mod+shift+m   new_os_window
map kitty_mod+m         detach_window ask

map kitty_mod+t         new_tab
map kitty_mod+shift+w   close_tab
map kitty_mod+shift+n   next_tab
map kitty_mod+shift+p   previous_tab

map ctrl+tab            next_tab
map ctrl+shift+tab      previous_tab

map kitty_mod+w         close_window
map kitty_mod+]         next_window
map kitty_mod+[         previous_window

map kitty_mod+s         launch --location=vsplit --cwd=current
map kitty_mod+shift+s   launch --location=hsplit --cwd=current

map kitty_mod+shift+h   neighboring_window left
map kitty_mod+shift+l   neighboring_window right
map kitty_mod+shift+k   neighboring_window up
map kitty_mod+shift+j   neighboring_window down

map kitty_mod+shift+alt+h   move_window left
map kitty_mod+shift+alt+l   move_window right
map kitty_mod+shift+alt+k   move_window up
map kitty_mod+shift+alt+j   move_window down

map kitty_mod+r         layout_action rotate

map kitty_mod+1         goto_tab 1
map kitty_mod+2         goto_tab 2
map kitty_mod+3         goto_tab 3
map kitty_mod+4         goto_tab 4
map kitty_mod+5         goto_tab 5
map kitty_mod+6         goto_tab 6
map kitty_mod+7         goto_tab 7
map kitty_mod+8         goto_tab 8
map kitty_mod+9         goto_tab 9
map kitty_mod+0         goto_tab 0

map kitty_mod+equal     change_font_size all +2.0
map kitty_mod+minus     change_font_size all -2.0
map kitty_mod+0         change_font_size all 0

map kitty_mod+,         edit_config_file
map kitty_mod+shift+,   kitty_shell window
map kitty_mod+.         kitten unicode_input

# Hints

# open
map kitty_mod+o>u kitten hints
map kitty_mod+o>p kitten hints --type path

# insert
map kitty_mod+i>u kitten hints --program -
map kitty_mod+i>p kitten hints --program - --type path
map kitty_mod+i>l kitten hints --program - --type line
map kitty_mod+i>w kitten hints --program - --type word
map kitty_mod+i>h kitten hints --program - --type hash

# insert multiple
map kitty_mod+shift+i>u kitten hints --program - --multiple
map kitty_mod+shift+i>p kitten hints --program - --multiple --type path
map kitty_mod+shift+i>l kitten hints --program - --multiple --type line
map kitty_mod+shift+i>w kitten hints --program - --multiple --type word
map kitty_mod+shift+i>h kitten hints --program - --multiple --type hash

# copy
map kitty_mod+y>u kitten hints --program @
map kitty_mod+y>p kitten hints --program @ --type path
map kitty_mod+y>l kitten hints --program @ --type line
map kitty_mod+y>w kitten hints --program @ --type word
map kitty_mod+y>h kitten hints --program @ --type hash

map kitty_mod+shift+y>u kitten hints --program @ --multiple
map kitty_mod+shift+y>p kitten hints --program @ --multiple --type path
map kitty_mod+shift+y>l kitten hints --program @ --multiple --type line
map kitty_mod+shift+y>w kitten hints --program @ --multiple --type word
map kitty_mod+shift+y>h kitten hints --program @ --multiple --type hash

# vim:fileencoding=utf-8:ft=conf:foldmethod=marker
